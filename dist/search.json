[{"title":"给 Nuclei 模板做自动分类 —— 一个编辑距离算法的进化历程","url":"/my-blog/posts/fingerprinthub_classify_blog","category":"网络安全","tags":["Nuclei","FingerprintHub","编辑距离","自动化工具","算法优化","漏洞扫描"],"content":"记录一下怎么用编辑距离算法把 Nuclei 模板和 FingerprintHub 自动匹配分类的过程，从自己手写到用现成库优化的折腾经历"},{"title":"Golang并发编程深度解析：从理论到实践","url":"/my-blog/posts/golang-concurrency-advanced","category":"后端开发","tags":["Go","Golang","并发编程","协程","后端开发"],"content":"深入解析Golang并发编程原理，涵盖进程、线程、协程、并发与并行等核心概念，并提供实战代码示例"},{"title":"Go 并发编程深度解析 —— goroutine 和 channel 的实战技巧","url":"/my-blog/posts/golang-concurrency-deep-dive","category":"后端开发","tags":["Go","Golang","并发编程","goroutine","channel","后端开发"],"content":"深入理解 Go 的并发模型，掌握 goroutine、channel、select 等核心概念，学会处理并发编程中的常见问题和最佳实践"},{"title":"Go 并发编程基础 —— 从进程到 goroutine 的深度理解","url":"/my-blog/posts/golang-concurrency-fundamentals","category":"后端开发","tags":["Go","Golang","并发编程","进程","线程","goroutine","后端开发"],"content":"深入理解 Go 并发编程的核心概念，从操作系统层面的进程线程，到 Go 语言的 goroutine 协程，掌握并发编程的基础知识"},{"title":"go-zero 框架入门指南 —— 让微服务开发变得简单","url":"/my-blog/posts/golang-go-zero-framework","category":"后端开发","tags":["Go","Golang","go-zero","微服务","后端框架","后端开发"],"content":"深入浅出地介绍 go-zero 框架，从基础概念到实战应用，学会用 go-zero 快速搭建微服务系统"},{"title":"我的 Astro 博客折腾记录 —— 从选型到上线的全过程","url":"/my-blog/posts/tech-summary","category":"前端开发","tags":["Astro","TailwindCSS","GitHub Pages","博客搭建","前端框架"],"content":"记录一下用 Astro + TailwindCSS 搭建个人博客的整个过程，包括为啥选 Astro、怎么学的、GitHub Pages 踩坑经历，给想搭博客的朋友一些参考"}]